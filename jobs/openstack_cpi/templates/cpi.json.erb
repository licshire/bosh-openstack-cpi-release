<%=
  params = {
    'cloud' => {
      'plugin' => 'openstack',
      'properties' => {
        'openstack' => {
          'auth_url' => p('openstack.auth_url'),
          'username' => p('openstack.username'),
          'api_key' => p('openstack.api_key'),
          'default_key_name' => p('openstack.default_key_name'),
          'default_security_groups' => p('openstack.default_security_groups'),
          'default_volume_type' => p('openstack.default_volume_type', nil),
          'wait_resource_poll_interval' => p('openstack.wait_resource_poll_interval'),
          'ignore_server_availability_zone' => p('openstack.ignore_server_availability_zone'),
          'use_nova_networking' => p('openstack.use_nova_networking')
        }
      }
    }
  }

  openstack_params = params['cloud']['properties']['openstack']
  if_p('openstack.region')                     { |value| openstack_params['region'] = value }
  if_p('openstack.endpoint_type')              { |value| openstack_params['endpoint_type'] = value }
  if_p('openstack.state_timeout')              { |value| openstack_params['state_timeout'] = value }
  if_p('openstack.stemcell_public_visibility') { |value| openstack_params['stemcell_public_visibility'] = value }
  if_p('openstack.connection_options')         { |value| openstack_params['connection_options'] = value }
  if_p('openstack.boot_from_volume')           { |value| openstack_params['boot_from_volume'] = value }
  if_p('openstack.config_drive')               { |value| openstack_params['config_drive'] = value }
  if_p('openstack.use_dhcp')                   { |value| openstack_params['use_dhcp'] = value }
  if_p('openstack.domain')                     { |value| openstack_params['domain'] = value }
  if_p('openstack.project')                    { |value| openstack_params['project'] = value }
  if_p('openstack.tenant')                     { |value| openstack_params['tenant'] = value }
  if_p('openstack.human_readable_vm_names')    { |value| openstack_params['human_readable_vm_names'] = value }
  if_p('openstack.enable_auto_anti_affinity')  { |value| openstack_params['enable_auto_anti_affinity'] = value }

  JSON.dump(params)
%>
